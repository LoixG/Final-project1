# -*- coding: utf-8 -*-
"""FINAL PROJECT

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/10-bmkwAk0TmFTHkSOrarEbmzdjvWpWU6
"""

import pandas as pd
import matplotlib.pyplot as plt

file_path = "/content/weatherAUS.csv"
df = pd.read_csv(file_path)

# Step 1: Extract Year and Month
df['Date'] = pd.to_datetime(df['Date'])
df['Year'] = df['Date'].dt.year
df['Month'] = df['Date'].dt.month
df.head()
# Step 2: Impute missing values
df['Evaporation'].fillna(df['Evaporation'].mean(), inplace=True)
df['WindSpeed3pm'].fillna(df['WindSpeed3pm'].median(), inplace=True)
df.head()
# Step 3: Advanced indexing to locate rows where 'Rainfall' is greater than 10
filtered_data = df.loc[df['Rainfall'] > 10, ['Location', 'Rainfall']]
df.head()
# Step 4: Select data for January 2009
january_2009_data = df[(df['Year'] == 2009) & (df['Month'] == 1)][['Date', 'MaxTemp']]
df.head()
# Step 5: Group by 'Location' and calculate average 'Rainfall'
average_rainfall_by_location = df.groupby('Location')['Rainfall'].mean()
df.head()
# Step 6: Group by 'RainToday' and count occurrences
rain_today_counts = df.groupby('RainToday').size()
df.head()
# Step 7: Create a new dataframe by concatenating 'Location' and 'RainTomorrow' columns
new_dataframe = pd.concat([df['Location'], df['RainTomorrow']], axis=1)
new_dataframe.head()
# Step 8: Data Visualization
x=df['Humidity9am']
y=df['Humidity3pm']
plt.scatter(x,y)
plt.title('Humidity9am vsHumidity3pm')
plt.xlabel('Humidity9am')
plt.ylabel('Humidity3pm')
# Step 9: Calculate mean and standard deviation of 'MaxTemp' column
max_temp_mean = df['MaxTemp'].mean()
max_temp_std = df['MaxTemp'].std()
print(max_temp_mean,max_temp_std)
# Step 10: Extract rows where 'Rainfall' is greater than 10
high_rainfall_data = df[df['Rainfall'] > 10]
x=high_rainfall_data['Rainfall']
y=high_rainfall_data['MaxTemp']
plt.scatter(x,y)

new_dataframe = pd.concat([df['Location'], df['RainTomorrow']], axis=1)
new_dataframe.head()